@using System.Globalization
@using FengWo.Web.Startup
@{
    ViewBag.CurrentPageName = PageNames.SurveyManage; // The menu item will be active for this page.
}
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<link href="~/lib/bootstrap-table/dist/bootstrap-table.css" rel="stylesheet" />
<link href="~/node_modules/element-ui/lib/theme-chalk/index.css" rel="stylesheet" />
<script src="~/lib/bootstrap-table/dist/bootstrap-table.js"></script>
<script src="~/lib/bootstrap-table/dist/bootstrap-table-locale-all.min.js"></script>
<script src="~/lib/vue/dist/vue.min.js"></script>
<script src="~/node_modules/clipboard/dist/clipboard.min.js"></script>
<script src="~/node_modules/element-ui/lib/index.js"></script>
<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <h2>
                    @L("SurveyManage")
                </h2>
            </div>
            <div class="body table-responsive">

                <table id="table"></table>

                <button type="button" class="btn btn-primary btn-circle waves-effect waves-circle waves-float pull-right" onclick="UploadFile()" data-toggle="modal">
                    <i class="material-icons">import_export</i>
                </button>
                <button type="button" class="btn btn-primary btn-circle waves-effect waves-circle waves-float pull-right" onclick="CreateMenu()" data-toggle="modal">
                    <i class="material-icons">add</i>
                </button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="CreateModalLabel" tabindex="-1" role="dialog" aria-labelledby="CreateModalLabel" data-backdrop="static">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">
                    <span>@L("CreateSurvey")</span>
                </h4>
            </div>
            <div id="ForEditDiv" class="modal-body">
                <div class="tab-content">
                    <div role="tabpanel" class="tab-pane animated fadeIn active" id="create-user-details">
                        <div class="row clearfix" style="margin-top:10px;">
                            <div class="col-sm-12">
                                <div class="form-group form-float">
                                    <div class="form-line">
                                        <input class="form-control" type="text" id="Title" v-model="Title" required minlength="2">
                                        <label class="form-label">@L("Title")</label>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <label>类型:</label>
                                <el-select v-model="questionType" placeholder="请选择">
                                    <el-option v-for="item in options"
                                               :key="item.value"
                                               :label="item.label"
                                               :value="item.label">
                                    </el-option>
                                </el-select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default waves-effect" data-dismiss="modal">@L("Cancel")</button>
                    <button type="submit" id="BtnSave" onclick="SaveMenu()" class="btn btn-primary waves-effect">@L("Save")</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ChooseAnswerModalLabel" tabindex="-1" role="dialog" aria-labelledby="ChooseAnswerModalLabel" data-backdrop="static">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header" id="divForCATitle">
                <h4 class="modal-title">
                    <span id="title">{{ message }}</span>
                </h4>
            </div>
            <div class="modal-body">
                <div id="departmentsDiv">
                    <label>@L("Departments"):</label>
                    <template>
                        <el-select v-model="value" placeholder="请选择" v-on:change="onChangedDepartment($event)">
                            <el-option v-for="item in options"
                                       :key="item.value"
                                       :label="item.label"
                                       :value="item.value">
                            </el-option>
                        </el-select>
                    </template>
                </div>

                <div id="ForTransferDiv" class="m-t-10">
                    <template>
                        <el-transfer v-model="value" :data="data" :titles="['未选用户','已选用户']"></el-transfer>
                    </template>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default waves-effect" data-dismiss="modal">@L("Cancel")</button>
                    <button type="submit" id="BtnSave" onclick="SaveTransfer()" class="btn btn-primary waves-effect">@L("Save")</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="uploadDialog">
    <el-dialog title="导入问卷" :visible.sync="dialogVisible">
        <el-form>
            <el-form-item style="text-align:center">
                <el-upload class="upload-demo center"
                           action="/Survey/ExcelImport"
                           drag
                           :limit="1" :headers="headers" :on-success="onSuccesss"
                           :file-list="fileList">
                    <i class="el-icon-upload"></i>
                    @*<el-button size="small" type="primary">点击上传</el-button>*@
                    <div class="el-upload__text">将文件拖到此处，或<em>点击上传</em></div>
                    <div slot="tip" class="el-upload__tip">只能上传Excel文件</div>
                </el-upload>
            </el-form-item>

            <a href="/Event/DownloadUploadedFile/?fileName=问卷导入Excel.xlsx" :download="download" target="_blank" class="text item">
                下载导入用模板
            </a>
        </el-form>
    </el-dialog>
</div>

<div id="dialogLinkage">
    <el-dialog title="问卷联动" :visible.sync="dialogVisible">
        <el-form>
            <el-form-item label="字段">
                <el-select v-model="currentEdit" placeholder="请选择" @@change="selectedCurrent">
                    <el-option v-for="item in currentEditOptions"
                               :key="item.key"
                               :label="item.name"
                               :value="item.model">
                    </el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="父级字段">
                <el-select v-model="parentEdit" placeholder="请选择">
                    <el-option v-for="item in parentEditOptions"
                               :key="item.key"
                               :label="item.name"
                               :value="item.model">
                    </el-option>
                </el-select>
            </el-form-item>

            <el-form-item label="显示条件">
                <template>
                    <el-radio v-model="showCondition" label="1">大于</el-radio>
                    <el-radio v-model="showCondition" label="2">小于</el-radio>
                </template>
            </el-form-item>

            <el-form-item label="达标值">
                <el-input v-model="parentValue" placeholder="请输入内容"></el-input>
            </el-form-item>

            <el-form-item label="一级指标分类">
                <el-select v-model="PC" placeholder="请选择">
                    <el-option v-for="item in PCOptions"
                               :key="item.key"
                               :label="item.label"
                               :value="item.value">
                    </el-option>
                </el-select>
            </el-form-item>

            <el-form-item label="二级指标分类">
                <el-select v-model="SC" placeholder="请选择">
                    <el-option v-for="item in SCOptions"
                               :key="item.key"
                               :label="item.label"
                               :value="item.value">
                    </el-option>
                </el-select>
            </el-form-item>

            <el-form-item>
                <el-tooltip class="item" effect="dark" content="父级指标达到目标值后自动显示" placement="right">
                    <el-button type="primary" @@click="OnSave">保存</el-button>
                </el-tooltip>
            </el-form-item>
        </el-form>
    </el-dialog>
</div>
<script src="~/lib/cookies/js.cookie.min.js"></script>
<script src="~/lib/select2/dist/js/select2.min.js"></script>
<link href="~/lib/select2/dist/css/select2.min.css" rel="stylesheet" />
<script>
    var action = '';
    var obj = {
        questionType:null
    };

    var dataObj = [];
    var titleObj = {};
    var departments = [];
    var titleVue = null;
    var modalVue = null;
    var transferVue = null;
    var departmentVue = null;
    var comboboxValue = {
        options: departments,
        value: ''
    };
    var id = -1;
    var transferObj = {
        data: dataObj,
        value: [],
    };
    var dialogVue = null;
    var dialogObj = {
        itemId:-1,
        dialogVisible: false,
        currentEdit: null,
        currentEditOptions: [],
        parentEditOptions: [],
        PCOptions: [],
        SCOptions: [],
        PC: null,
        SC:null,
        defaultHide: true,
        parentEdit: null,
        parentValue: null,
        showCondition:'1'
    };

    var uploadVue = null;
    var uploadObj = {
        dialogVisible: false,
        fileList: [],
         headers: {
            'X-Requested-With':'XMLHttpRequest','X-XSRF-TOKEN':''
        },
        accept: "*/*; q=0.01",
        download:'问卷导入Excel.xlsx'
    };
    uploadObj.headers['X-XSRF-TOKEN'] = Cookies.get('XSRF-TOKEN');

    $(function () {
         obj.id = null;
         obj.Title = '';
         obj.Status = '0';
        obj.IsReleased = '';

        abp.services.app.basicDataMaintenance.getSelectByKeyword('PCKey', null).done(function (data) {
            dialogObj.PCOptions = data;
        });

        abp.services.app.basicDataMaintenance.getSelectByKeyword('SCKey', null).done(function (data) {
            dialogObj.SCOptions = data;
        });
        abp.services.app.basicDataMaintenance.getSelectByKeyword('KIM_Statistics_Type', null).done(function(data){
            obj.options = data;
            modalVue = new Vue({
            el: '#ForEditDiv',
            data: obj,
          });
        });
        transferVue = new Vue({
            el: '#ForTransferDiv',
            data() {
                return transferObj;
            },
        });

        dialogVue = new Vue({
            el: '#dialogLinkage',
            data: dialogObj,
            methods: {
                selectedCurrent: function (e) {
                    var dto = {};
                    dto.name = dialogObj.currentEdit;
                    dto.questionnaireItemId = dialogObj.itemId;
                    dto.parentName = dialogObj.parentEdit;
                    dto.targetValue = dialogObj.parentValue;
                    abp.services.app.questionnaire.getQuestionnaireLinkage(dto, null).done(function (data) {
                        if (data.primaryClassfication > 0)
                            dialogObj.PC = data.primaryClassfication;
                        else
                            dialogObj.PC = null;
                        if(data.secondaryClassfication>0)
                            dialogObj.SC = data.secondaryClassfication;
                        else
                            dialogObj.SC = null;
                        dialogObj.showCondition =  data.showCondition.toString();
                        dialogObj.parentEditOptions.splice(0);
                        for (var i = 0; i < dialogObj.currentEditOptions.length; i++) {
                            if (dialogObj.currentEditOptions[i].name != e)
                                dialogObj.parentEditOptions.push(dialogObj.currentEditOptions[i]);
                        }
                        dialogObj.parentEdit = data.parentName;
                        dialogObj.parentValue = data.targetValue;
                    });
                },
                OnSave: function () {
                    var dto = {};
                    dto.name = dialogObj.currentEdit;
                    dto.questionnaireItemId = dialogObj.itemId;
                    dto.parentName = dialogObj.parentEdit;
                    dto.targetValue = dialogObj.parentValue;
                    dto.primaryClassfication = dialogObj.PC;
                    dto.secondaryClassfication = dialogObj.SC;
                    dto.showCondition = dialogObj.showCondition;
                    abp.services.app.questionnaire.saveQuestionnaireLinkage(dto, null).done(function (data) {
                        dialogVue.$message({ message: '保存成功', type: 'success' });
                    });
                }
            }
        });

        uploadVue = new Vue({
            el: '#uploadDialog',
            data: uploadObj,
            methods: {
                onSuccesss(response, file, fileList) {
                    uploadVue.$message({ message: '上传成功', type: 'success' });
                    uploadObj.dialogVisible = false;
                    table.bootstrapTable('refresh');
            },
            }
        });

        titleObj.message='';

        titleVue = new Vue({
            el: '#divForCATitle',
            data: titleObj
        });
        abp.services.app.department.getDepartmentDropdownList().done(function (data) {
            for (var i = 0; i < data.rows.length; i++) {
                departments.push({ value: data.rows[i].id, label: data.rows[i].departmentName });
            }
            if (data.rows.length > 0) {
                comboboxValue.value = data.rows[0].id;
                onChangedDepartment(data.rows[0].id);
            }
            departmentVue = new Vue({
                el: '#departmentsDiv',
                data() {
                    return comboboxValue;
                }
            });
        });
    });

    function onChangedDepartment(val) {
        dataObj.splice(0);
        abp.services.app.user.getUsersByDepartmentId(val).done(function (data) {
            for (var i = 0; i < data.length; i++) {
                dataObj.push({key:data[i].id, label:data[i].userName });
            }
        });
    }

    function UploadFile() {
        uploadObj.dialogVisible = true;
    }

    function SaveTransfer() {
        var entity = {};
        entity.questionnaireItemId = id;
        entity.userIds = transferObj.value;
        entity.type = action;
        abp.services.app.questionnaire.setMustAnswer(entity, null).done(function (data) {
            abp.message.success('保存成功');
        $('#ChooseAnswerModalLabel').modal('hide');
        });
    }

    var locale = '@CultureInfo.CurrentUICulture.Name';
    var local = '@CultureInfo.CurrentUICulture.Name';
    if (local == 'zh-Hans') {
        locale = "zh-CN";
    }

    var table = $('#table');

    table.bootstrapTable({
        url: abp.appPath + 'api/services/app/Questionnaire/GetQuestionnaires',
        locale:locale,
        buttonsAlign:'right',
        pageSize: 10,
        showColumns:true,
        showRefresh:true,
        showExport:true,
        queryParamsType: 'limit',
        sidePagination: 'server',
        silentSort: false,
        pagination: true,
        search: true,
        sortable: true,
        sortName: "id",
        columns: [{
            field: 'id',
            title: 'ID',
        },   {
                field: 'title',
                title:'@L("Title")',
                sortable: true,
            },
            {
            field: 'status',
                title: '@L("Status")',
                formatter: function (val, row, index) {
                    switch (val) {
                        case 0: {
                            return '未开始';
                        }
                        case 1: {
                            return '调查中';
                        }
                        case 2: {
                            return '已结束';
                        }
                    }
                    return '';
                }
            },{
                field: 'isReleased',
                title: '@L("IsReleased")',
                formatter: function (val, row, index) {
                    if (val) {
                            return '已发布';
                     }
                    else{
                            return '未发布';
                     }
                }
            },{
                title: '@L("Actions")',
                field:'actions',
                formatter: function (val, row, index) {
                    var str = '';
                    var editProperty = '<a role="button" onclick="Update(\''+row.id+'\')" data-toggle="tooltip" data-placement="top" title="修改属性")"><i class="material-icons">playlist_add</i></a>';
                    var editStr = '<a href="/Survey/EditSurvey/' + row.id + '" role="button" data-toggle="tooltip" data-placement="top" title="@L("Edit")"><i class="material-icons">edit</i></a>';
                    var editLinkageStr = '<a role="button" onclick="EditLinkage(\''+row.id+'\')" data-toggle="tooltip" data-placement="top" title="@L("EditLinkage")"><i class="material-icons">linear_scale</i></a>';
                    var previewStr = '<a href="/Survey/PreviewSheet/' + row.id + '" role="button" data-toggle="tooltip" data-placement="top" title="@L("PreviewSheet")"><i class="material-icons">remove_red_eye</i></a>';
                    var deleteStr = '<a href="#" onclick="DeleteById(\'' + row.id + '\')" data-menu-id="' + row.id + '" data-toggle="tooltip" data-placement="top" title="@L("Delete")" > <i class="material-icons">delete_sweep</i></a>';
                    var publishStr = '<a role="button" onclick="Publish(\'' + row.id + '\')" data-toggle="tooltip" data-placement="top" title="@L("Publish")"><i class="material-icons">publish</i></a>';
                    var endStr = '<a role="button" onclick="Close(\''+row.id+'\')" data-toggle="tooltip" data-placement="top" title="@L("Close")"><i class="material-icons">close</i></a>';
                    var urlStr = '<a role="button" onclick="Browser(\''+row.id+'\')" data-toggle="tooltip" data-placement="top" title="@L("GetUrl")"><i class="material-icons">open_in_new</i></a>';
                    var setTransferMustStr = '<a role="button" onclick="SetTransfer(\''+row.id+'\',\'must\')" data-toggle="tooltip" data-placement="top" title="@L("SetupMustAnswer")"><i class="material-icons">lock</i></a>';
                    var setTransferSelectStr = '<a role="button" onclick="SetTransfer(\''+row.id+'\',\'select\')" data-toggle="tooltip" data-placement="top" title="@L("SetupSelectAnswer")"><i class="material-icons">lock_open</i></a>';

                    str = str + editProperty;
                    if (row.isReleased == false) {
                        str = str + publishStr + setTransferMustStr+setTransferSelectStr;
                    }
                    if (row.isReleased == false && row.status == 0) {
                        str = str + editStr;
                        str = str + editLinkageStr;
                        str = str + previewStr;
                        str = str + deleteStr;
                    }
                    if (row.isReleased == true) {

                    }
                    if (row.isReleased == true && row.status == 1) {
                        str = str + urlStr;
                        str = str + endStr;
                    }

                    return str;
                }
            },],
        responseHandler: function (res) {
            return res.result;
        }
    });

    function EditLinkage(id) {
        abp.services.app.questionnaire.getQuestionnaireFormById(id, null).done(function (data) {
            dialogObj.currentEditOptions = JSON.parse(data).list;
            dialogObj.dialogVisible = true;
            dialogObj.itemId = id;
        });
    }

    function SetTransfer(id, type) {
        if (type == 'must') {
            titleObj.message = '设置必答者';// '@L("MustAnswer")';
            action = 1;
        }
        else {
            titleObj.message = '设置选答者';// '@L("SelectedAnswer")';
            action = 2;
        }
        this.id = id;
        if (id > 0) {
            transferObj.value.splice(0);
        var entity = {};
        entity.questionnaireItemId = id;
        entity.type = action;
            abp.services.app.questionnaire.getMustAnswerUser(entity, null).done(function (data) {
               for (var i = 0; i < data.length; i++) {
                   transferObj.value.push(data[i]);
            }
        });
        }
        $('#ChooseAnswerModalLabel').modal('show');
    }

    function SaveMenu() {
        abp.services.app.questionnaire.createOrUpdate(obj, null).done(function () {
            $('#CreateModalLabel').modal('hide');
            table.bootstrapTable('refresh');
        }).fail(function (data) {
            abp.message.error('保存失败...', '提示', false);
        });
    }

    function Close(id) {
        abp.services.app.questionnaire.closeQuestionnaire(id, null).done(function () {
            abp.message.success('关闭完成.', '', false);
            table.bootstrapTable('refresh');
        }).fail(function () { });
    }

    function Publish(id) {
        abp.services.app.questionnaire.publishQuestionnaire(id, null).done(function () {
            var loc = getBaseUrl(id);
            abp.message.success('您的地址为:\n<a id="browseMsg" href="' + loc + '">' + loc + '</a>\r\n<a role="button" id="copy"  data-clipboard-text="'+loc+'" onclick="CopyToClipboard()">点击复制链接</a>', '问卷发布成功', true);
            table.bootstrapTable('refresh');
        }).fail(function () { });
    }

    function DeleteById(id) {
        abp.message.confirm('是否要删除该问卷?', '提示', function (data) {
            if (data) {
                abp.services.app.questionnaire.deleteById(id, null).done(function () {
                 table.bootstrapTable('refresh');
                 abp.message.success('删除完成', '', false);
                }).fail(function () {
                     table.bootstrapTable('refresh');
                 abp.message.error('删除失败', '', false);
                });
            }
        }, false);
    }

    function Browser(id) {
        var loc = getBaseUrl(id);
        abp.message.success('您的答卷地址为:\n<a id="browseMsgUrl" href="' + loc + '">' + loc + '</a>\r\n<a role="button" id="copy" data-clipboard-text="'+loc+'" onclick="CopyToClipboard()">点击复制链接</a>', '答卷地址', true);
    }

    function CreateMenu() {
        obj.id = null;
        obj.Title = '';
        obj.Status = 0;
        obj.IsReleased = false;
        delete obj.id;
        $('#CreateModalLabel').modal('show');
     }

    function Update(id) {
        abp.services.app.questionnaire.getById(id, null).done(function (data) {
            obj.id = data.id;
            obj.Title = data.title;
            obj.Status = data.status;
            obj.IsReleased = data.isReleased;
            obj.questionType = data.questionType;
            $('#CreateModalLabel').modal('show');
        }).fail(function (data) {

        });
    }
    function getBaseUrl (id) {
     var ishttps = 'https:' == document.location.protocol ? true: false;
    var url = window.location.host;
      if(ishttps){
        url = 'https://' + url+'/Survey/AnswerSheet/'+id;
    }else{
        url = 'http://' + url+'/Survey/AnswerSheet/'+id;
     }
     return url;
    }
    function CopyToClipboard() {
        new ClipboardJS('#copy');
        abp.message.success('复制完成');
    }
</script>
